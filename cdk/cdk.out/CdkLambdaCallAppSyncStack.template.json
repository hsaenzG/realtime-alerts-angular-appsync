{
 "Resources": {
  "ApiF70053CD": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "AuthenticationType": "API_KEY",
    "Name": "TriggeredByLambda"
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/Api/Resource"
   }
  },
  "ApiSchema510EECD7": {
   "Type": "AWS::AppSync::GraphQLSchema",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "Definition": "type Todo {\n  id: ID!\n  name: String!\n  description: String\n  createdAt: AWSDateTime!\n  updatedAt: AWSDateTime!\n}\n\ntype ModelTodoConnection {\n  items: [Todo]\n  nextToken: String\n}\n\ntype Query {\n  getTodo(id: ID!): Todo\n  listTodos(limit: Int, nextToken: String): ModelTodoConnection\n}\n\ntype Mutation {\n  createTodo(id: ID, name: String!, description: String): Todo\n  updateTodo(id: ID!, name: String, description: String): Todo\n  deleteTodo(id: ID!): Todo\n}\n\ntype Subscription {\n  onCreateTodo: Todo @aws_subscribe(mutations: [\"createTodo\"])\n  onUpdateTodo: Todo @aws_subscribe(mutations: [\"updateTodo\"])\n  onDeleteTodo: Todo @aws_subscribe(mutations: [\"deleteTodo\"])\n}\n"
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/Api/Schema"
   }
  },
  "ApiDefaultApiKeyF991C37B": {
   "Type": "AWS::AppSync::ApiKey",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    }
   },
   "DependsOn": [
    "ApiSchema510EECD7"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/Api/DefaultApiKey"
   }
  },
  "Apinone1F55F3F3": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "Name": "none",
    "Type": "NONE"
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/Api/none/Resource"
   }
  },
  "createTodoFunction2D3179A2": {
   "Type": "AWS::AppSync::FunctionConfiguration",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "DataSourceName": "none",
    "Name": "createTodoFunction",
    "CodeS3Location": {
     "Fn::Sub": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/78893354d53c45ab327cc77edf2d21a343502dc7e95c3266c54844b9f76b1a2e.js"
    },
    "FunctionVersion": "2018-05-29",
    "Runtime": {
     "Name": "APPSYNC_JS",
     "RuntimeVersion": "1.0.0"
    }
   },
   "DependsOn": [
    "Apinone1F55F3F3",
    "ApiSchema510EECD7"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/createTodoFunction/Resource"
   }
  },
  "PipelineResolver36C637FD": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "createTodo",
    "TypeName": "Mutation",
    "Code": "\n        // The before step\n        export function request(...args) {\n          console.log(args);\n          return {}\n        }\n    \n        // The after step\n        export function response(ctx) {\n          return ctx.prev.result\n        }\n      ",
    "Kind": "PIPELINE",
    "PipelineConfig": {
     "Functions": [
      {
       "Fn::GetAtt": [
        "createTodoFunction2D3179A2",
        "FunctionId"
       ]
      }
     ]
    },
    "Runtime": {
     "Name": "APPSYNC_JS",
     "RuntimeVersion": "1.0.0"
    }
   },
   "DependsOn": [
    "ApiSchema510EECD7"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/PipelineResolver/Resource"
   }
  },
  "triggerServiceRole07E9ABD5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/trigger/ServiceRole/Resource"
   }
  },
  "triggerServiceRoleDefaultPolicy87FA9B3E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "appsync:GraphQL",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":appsync:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":apis/",
          {
           "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
           ]
          },
          "/types/Mutation/*"
         ]
        ]
       }
      },
      {
       "Action": "dynamodb:ListStreams",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "RandomDataTable85033148",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "triggerServiceRoleDefaultPolicy87FA9B3E",
    "Roles": [
     {
      "Ref": "triggerServiceRole07E9ABD5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/trigger/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "trigger73DC69F8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f49a4250b9437742ff5864919af260881b3196390c47e444bb56eb2046cff033.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "triggerServiceRole07E9ABD5",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "GRAPHQL_URL": {
       "Fn::GetAtt": [
        "ApiF70053CD",
        "GraphQLUrl"
       ]
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "triggerServiceRoleDefaultPolicy87FA9B3E",
    "triggerServiceRole07E9ABD5"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/trigger/Resource",
    "aws:asset:path": "asset.f49a4250b9437742ff5864919af260881b3196390c47e444bb56eb2046cff033",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "triggerDynamoDBEventSourceCdkLambdaCallAppSyncStackRandomDataTable1376B02B364B8746": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "trigger73DC69F8"
    },
    "BatchSize": 100,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "RandomDataTable85033148",
      "StreamArn"
     ]
    },
    "StartingPosition": "LATEST"
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/trigger/DynamoDBEventSource:CdkLambdaCallAppSyncStackRandomDataTable1376B02B/Resource"
   }
  },
  "RandomDataTable85033148": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/RandomDataTable/Resource"
   }
  },
  "LambdaExecutionRoleD5C26073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/LambdaExecutionRole/Resource"
   }
  },
  "AccessPolicyD18466CD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:PutItem",
        "dynamodb:GetItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "RandomDataTable85033148",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AccessPolicyD18466CD",
    "Roles": [
     {
      "Ref": "LambdaExecutionRoleD5C26073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/AccessPolicy/Resource"
   }
  },
  "myFunction884E1557": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "548311c4921fcf19c35e58346232b313003d5a81c110daed1f3586d7984b0795.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "interval_in_minutes": "5",
      "RANDOMDATA_TABLE_NAME": {
       "Ref": "RandomDataTable85033148"
      },
      "RANDOMDATA_TABLE_ARN": {
       "Fn::GetAtt": [
        "RandomDataTable85033148",
        "Arn"
       ]
      }
     }
    },
    "Handler": "handler.handler",
    "MemorySize": 128,
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/myFunction/Resource",
    "aws:asset:path": "asset.548311c4921fcf19c35e58346232b313003d5a81c110daed1f3586d7984b0795",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "schedulerrole9B80A9F3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "scheduler.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/scheduler-role/Resource"
   }
  },
  "schedulepolicyB4BD75DE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "myFunction884E1557",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ScheduleToInvokeLambdas",
    "Roles": [
     {
      "Ref": "schedulerrole9B80A9F3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/schedule-policy/Resource"
   }
  },
  "schedulegroup": {
   "Type": "AWS::Scheduler::ScheduleGroup",
   "Properties": {
    "Name": "SchedulesForLambda"
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/schedule-group"
   }
  },
  "myschedule": {
   "Type": "AWS::Scheduler::Schedule",
   "Properties": {
    "FlexibleTimeWindow": {
     "Mode": "OFF"
    },
    "ScheduleExpression": "rate(5 minute)",
    "Target": {
     "Arn": {
      "Fn::GetAtt": [
       "myFunction884E1557",
       "Arn"
      ]
     },
     "RoleArn": {
      "Fn::GetAtt": [
       "schedulerrole9B80A9F3",
       "Arn"
      ]
     }
    },
    "GroupName": "SchedulesForLambda"
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/my-schedule"
   }
  },
  "toIotServiceRoleB86485C8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/toIot/ServiceRole/Resource"
   }
  },
  "toIotServiceRoleDefaultPolicyF511407D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iot:*",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "toIotServiceRoleDefaultPolicyF511407D",
    "Roles": [
     {
      "Ref": "toIotServiceRoleB86485C8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/toIot/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "toIot387D3CEB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "548311c4921fcf19c35e58346232b313003d5a81c110daed1f3586d7984b0795.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "toIotServiceRoleB86485C8",
      "Arn"
     ]
    },
    "FunctionName": "toIot",
    "Handler": "toIotHandler.handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "toIotServiceRoleDefaultPolicyF511407D",
    "toIotServiceRoleB86485C8"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/toIot/Resource",
    "aws:asset:path": "asset.548311c4921fcf19c35e58346232b313003d5a81c110daed1f3586d7984b0795",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21RTVPCMBD9LdxDBDzoFVA5qKjUO7MkS0mbJjUfOJ1O/7v5oA7OeNp9b7P7dl8W9H5GZxP4tlPG66kUB9oXDlhNArXvoW1tpxjtNwba05dctoKsjyqhj5e/qGAnbCASgX/Gjmy1wgdwUGhvGMbCFVrmyU9eMSe0itUxX2t1FKU3kAo7tFqe0cQXYz4Qe7sHa9FZuowhYLryrEa3AotEQnPgsFeaY2XpNoVfJQEN7Xdapo1SfNdSsC7CnA2XAbS/2oo8nlG5vP1r8EWoMnb8w44dA+Gdgkbz4OknHLJgSsL+wSzuJZqkUVzQxmjfkitiGNL92bF4aPib8qL85l3r3WjLaHEwj4usHs+nlb05L+b0js4nlRViarxyokG6y/EHfYwAVgACAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CdkLambdaCallAppSyncStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "graphqlUrl": {
   "Value": {
    "Fn::GetAtt": [
     "ApiF70053CD",
     "GraphQLUrl"
    ]
   }
  },
  "apiId": {
   "Value": {
    "Fn::GetAtt": [
     "ApiF70053CD",
     "ApiId"
    ]
   }
  },
  "functionArn": {
   "Value": {
    "Fn::GetAtt": [
     "trigger73DC69F8",
     "Arn"
    ]
   }
  },
  "functionName": {
   "Value": {
    "Ref": "trigger73DC69F8"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}